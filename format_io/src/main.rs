fn main() {
    //用于输出数字的正负符号，对于负数自然会输出符号，对于正数会添加+
    println!("{}",format!("Hello {:+}!", 5)); //Hello +5!
    println!("{}",format!("Hello {:+}!", -15)); //Hello -15!

    //将数字按照16进制输出
    println!("{}",format!("{:#x}", 27)); //0x1b
    //数字左侧补零，确保位数为5位
    println!("{}",format!("Hello {:05}", 5));//Hello 00005
    //数字补零，包括符号位，总位数位5位
    println!("{}",format!("Hello {:+05}", -5));//Hello -0005
    //按照16进制显示数字，x占两位，总位数位8位，不足8位补零
    println!("{}",format!("{:#08x}", 27)); //0x00001b
    //按照二进制显示数字，0b占两位，总位数10位，不足10位布零
    println!("{}",format!("{:#010b}", 27)); //0b00011011

    //按照八进制显示数字，0o占两位，总位数10位，不足10位布零
    println!("{}",format!("{:#010o}", 27)); //o00000033

    //以下均打印出Hello x    !
    println!("Hello {:5}!", "x");//“:”后面直接跟数字且无"$"，表示width
    println!("Hello {:1$}!", "x", 5);// “:”后面直接跟数字且有"$"，数字表示的是第几个参数表示位宽，数字位参数序号，位宽为第1个参数
    println!("Hello {1:0$}!", 5, "x");//位宽为第0个参数

    //“:”后面跟变量名且变量名后跟"$"，则该变量的值即为位宽
    println!("Hello {:width$}!", "x", width = 5);
    let width = 5;
    println!("Hello {:width$}!", "x");

    //左对齐，且位宽为5，用空格补齐
    println!("Hello {:<5}!", "x");
    //左对齐，且位宽为5，用“-”补齐
    println!("{}",format!("Hello {:-<5}!", "x"));
    //居中对齐，且位宽为5，用“*”补齐
    println!("{}",format!("Hello {:*^5}!", "x"));
    //右对齐，且位宽为5，用“0”补齐
    println!("{}",format!("Hello {:0>5}!", "x"));
    
}
